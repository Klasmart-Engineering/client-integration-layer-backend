// source: job.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var api_pb = require('./api_pb.js');
goog.object.extend(proto, api_pb);
goog.exportSymbol('proto.cil_onboarding.jobs.Job', null, global);
goog.exportSymbol('proto.cil_onboarding.jobs.OnboardingError', null, global);
goog.exportSymbol('proto.cil_onboarding.jobs.OnboardingSuccess', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.jobs.Job = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cil_onboarding.jobs.Job, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.jobs.Job.displayName = 'proto.cil_onboarding.jobs.Job';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.jobs.OnboardingSuccess = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cil_onboarding.jobs.OnboardingSuccess, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.jobs.OnboardingSuccess.displayName = 'proto.cil_onboarding.jobs.OnboardingSuccess';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.jobs.OnboardingError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cil_onboarding.jobs.OnboardingError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.jobs.OnboardingError.displayName = 'proto.cil_onboarding.jobs.OnboardingError';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.jobs.Job.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.jobs.Job.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.jobs.Job} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.jobs.Job.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    request: (f = msg.getRequest()) && api_pb.OnboardingRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.jobs.Job}
 */
proto.cil_onboarding.jobs.Job.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.jobs.Job;
  return proto.cil_onboarding.jobs.Job.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.jobs.Job} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.jobs.Job}
 */
proto.cil_onboarding.jobs.Job.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new api_pb.OnboardingRequest;
      reader.readMessage(value,api_pb.OnboardingRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.jobs.Job.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.jobs.Job.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.jobs.Job} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.jobs.Job.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_pb.OnboardingRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cil_onboarding.jobs.Job.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.jobs.Job} returns this
 */
proto.cil_onboarding.jobs.Job.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional cil_onboarding.api.OnboardingRequest request = 2;
 * @return {?proto.cil_onboarding.api.OnboardingRequest}
 */
proto.cil_onboarding.jobs.Job.prototype.getRequest = function() {
  return /** @type{?proto.cil_onboarding.api.OnboardingRequest} */ (
    jspb.Message.getWrapperField(this, api_pb.OnboardingRequest, 2));
};


/**
 * @param {?proto.cil_onboarding.api.OnboardingRequest|undefined} value
 * @return {!proto.cil_onboarding.jobs.Job} returns this
*/
proto.cil_onboarding.jobs.Job.prototype.setRequest = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.jobs.Job} returns this
 */
proto.cil_onboarding.jobs.Job.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.jobs.Job.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.jobs.OnboardingSuccess.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.jobs.OnboardingSuccess.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.jobs.OnboardingSuccess} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.jobs.OnboardingSuccess.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    action: jspb.Message.getFieldWithDefault(msg, 2, 0),
    entity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    entityId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.jobs.OnboardingSuccess}
 */
proto.cil_onboarding.jobs.OnboardingSuccess.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.jobs.OnboardingSuccess;
  return proto.cil_onboarding.jobs.OnboardingSuccess.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.jobs.OnboardingSuccess} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.jobs.OnboardingSuccess}
 */
proto.cil_onboarding.jobs.OnboardingSuccess.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {!proto.cil_onboarding.api.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {!proto.cil_onboarding.api.Entity} */ (reader.readEnum());
      msg.setEntity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.jobs.OnboardingSuccess.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.jobs.OnboardingSuccess.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.jobs.OnboardingSuccess} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.jobs.OnboardingSuccess.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getEntity();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getEntityId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cil_onboarding.jobs.OnboardingSuccess.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.jobs.OnboardingSuccess} returns this
 */
proto.cil_onboarding.jobs.OnboardingSuccess.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional cil_onboarding.api.Action action = 2;
 * @return {!proto.cil_onboarding.api.Action}
 */
proto.cil_onboarding.jobs.OnboardingSuccess.prototype.getAction = function() {
  return /** @type {!proto.cil_onboarding.api.Action} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cil_onboarding.api.Action} value
 * @return {!proto.cil_onboarding.jobs.OnboardingSuccess} returns this
 */
proto.cil_onboarding.jobs.OnboardingSuccess.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional cil_onboarding.api.Entity entity = 3;
 * @return {!proto.cil_onboarding.api.Entity}
 */
proto.cil_onboarding.jobs.OnboardingSuccess.prototype.getEntity = function() {
  return /** @type {!proto.cil_onboarding.api.Entity} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cil_onboarding.api.Entity} value
 * @return {!proto.cil_onboarding.jobs.OnboardingSuccess} returns this
 */
proto.cil_onboarding.jobs.OnboardingSuccess.prototype.setEntity = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string entity_id = 4;
 * @return {string}
 */
proto.cil_onboarding.jobs.OnboardingSuccess.prototype.getEntityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.jobs.OnboardingSuccess} returns this
 */
proto.cil_onboarding.jobs.OnboardingSuccess.prototype.setEntityId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.jobs.OnboardingError.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.jobs.OnboardingError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.jobs.OnboardingError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.jobs.OnboardingError.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    action: jspb.Message.getFieldWithDefault(msg, 3, 0),
    errors: (f = msg.getErrors()) && api_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.jobs.OnboardingError}
 */
proto.cil_onboarding.jobs.OnboardingError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.jobs.OnboardingError;
  return proto.cil_onboarding.jobs.OnboardingError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.jobs.OnboardingError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.jobs.OnboardingError}
 */
proto.cil_onboarding.jobs.OnboardingError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {!proto.cil_onboarding.api.Entity} */ (reader.readEnum());
      msg.setEntity(value);
      break;
    case 3:
      var value = /** @type {!proto.cil_onboarding.api.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 4:
      var value = new api_pb.Error;
      reader.readMessage(value,api_pb.Error.deserializeBinaryFromReader);
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.jobs.OnboardingError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.jobs.OnboardingError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.jobs.OnboardingError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.jobs.OnboardingError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntity();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getErrors();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      api_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cil_onboarding.jobs.OnboardingError.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.jobs.OnboardingError} returns this
 */
proto.cil_onboarding.jobs.OnboardingError.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional cil_onboarding.api.Entity entity = 2;
 * @return {!proto.cil_onboarding.api.Entity}
 */
proto.cil_onboarding.jobs.OnboardingError.prototype.getEntity = function() {
  return /** @type {!proto.cil_onboarding.api.Entity} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cil_onboarding.api.Entity} value
 * @return {!proto.cil_onboarding.jobs.OnboardingError} returns this
 */
proto.cil_onboarding.jobs.OnboardingError.prototype.setEntity = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional cil_onboarding.api.Action action = 3;
 * @return {!proto.cil_onboarding.api.Action}
 */
proto.cil_onboarding.jobs.OnboardingError.prototype.getAction = function() {
  return /** @type {!proto.cil_onboarding.api.Action} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cil_onboarding.api.Action} value
 * @return {!proto.cil_onboarding.jobs.OnboardingError} returns this
 */
proto.cil_onboarding.jobs.OnboardingError.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional cil_onboarding.api.Error errors = 4;
 * @return {?proto.cil_onboarding.api.Error}
 */
proto.cil_onboarding.jobs.OnboardingError.prototype.getErrors = function() {
  return /** @type{?proto.cil_onboarding.api.Error} */ (
    jspb.Message.getWrapperField(this, api_pb.Error, 4));
};


/**
 * @param {?proto.cil_onboarding.api.Error|undefined} value
 * @return {!proto.cil_onboarding.jobs.OnboardingError} returns this
*/
proto.cil_onboarding.jobs.OnboardingError.prototype.setErrors = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.jobs.OnboardingError} returns this
 */
proto.cil_onboarding.jobs.OnboardingError.prototype.clearErrors = function() {
  return this.setErrors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.jobs.OnboardingError.prototype.hasErrors = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.cil_onboarding.jobs);
