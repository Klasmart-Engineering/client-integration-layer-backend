// source: api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.cil_onboarding.Class', null, global);
goog.exportSymbol('proto.cil_onboarding.Gender', null, global);
goog.exportSymbol('proto.cil_onboarding.OnboardingRequest', null, global);
goog.exportSymbol('proto.cil_onboarding.OnboardingRequest.EntityCase', null, global);
goog.exportSymbol('proto.cil_onboarding.Organization', null, global);
goog.exportSymbol('proto.cil_onboarding.RequestInformation', null, global);
goog.exportSymbol('proto.cil_onboarding.School', null, global);
goog.exportSymbol('proto.cil_onboarding.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.Organization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cil_onboarding.Organization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.Organization.displayName = 'proto.cil_onboarding.Organization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.School = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.School.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.School, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.School.displayName = 'proto.cil_onboarding.School';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.Class = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.Class.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.Class, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.Class.displayName = 'proto.cil_onboarding.Class';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.User.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.User.displayName = 'proto.cil_onboarding.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.OnboardingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cil_onboarding.OnboardingRequest.oneofGroups_);
};
goog.inherits(proto.cil_onboarding.OnboardingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.OnboardingRequest.displayName = 'proto.cil_onboarding.OnboardingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.RequestInformation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cil_onboarding.RequestInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.RequestInformation.displayName = 'proto.cil_onboarding.RequestInformation';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.Organization.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.Organization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.Organization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.Organization.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.Organization}
 */
proto.cil_onboarding.Organization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.Organization;
  return proto.cil_onboarding.Organization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.Organization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.Organization}
 */
proto.cil_onboarding.Organization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.Organization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.Organization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.Organization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.Organization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string client_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.Organization.prototype.getClientUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.Organization} returns this
 */
proto.cil_onboarding.Organization.prototype.setClientUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.cil_onboarding.Organization.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.Organization} returns this
 */
proto.cil_onboarding.Organization.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.School.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.School.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.School.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.School} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.School.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientOrganizationUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    programIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    shortCode: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.School}
 */
proto.cil_onboarding.School.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.School;
  return proto.cil_onboarding.School.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.School} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.School}
 */
proto.cil_onboarding.School.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientOrganizationUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addProgramIds(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.School.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.School.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.School} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.School.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientOrganizationUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProgramIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getShortCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string client_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.School.prototype.getClientUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.School} returns this
 */
proto.cil_onboarding.School.prototype.setClientUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_organization_uuid = 2;
 * @return {string}
 */
proto.cil_onboarding.School.prototype.getClientOrganizationUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.School} returns this
 */
proto.cil_onboarding.School.prototype.setClientOrganizationUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.cil_onboarding.School.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.School} returns this
 */
proto.cil_onboarding.School.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string program_ids = 4;
 * @return {!Array<string>}
 */
proto.cil_onboarding.School.prototype.getProgramIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.School} returns this
 */
proto.cil_onboarding.School.prototype.setProgramIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.School} returns this
 */
proto.cil_onboarding.School.prototype.addProgramIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.School} returns this
 */
proto.cil_onboarding.School.prototype.clearProgramIdsList = function() {
  return this.setProgramIdsList([]);
};


/**
 * optional string short_code = 5;
 * @return {string}
 */
proto.cil_onboarding.School.prototype.getShortCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.School} returns this
 */
proto.cil_onboarding.School.prototype.setShortCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.Class.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.Class.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.Class.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.Class} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.Class.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientOrganizationUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientSchoolUuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    programIdsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    shortCode: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.Class}
 */
proto.cil_onboarding.Class.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.Class;
  return proto.cil_onboarding.Class.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.Class} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.Class}
 */
proto.cil_onboarding.Class.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientOrganizationUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientSchoolUuid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addProgramIds(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.Class.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.Class.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.Class} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.Class.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientOrganizationUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientSchoolUuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProgramIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getShortCode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string client_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.Class.prototype.getClientUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.Class} returns this
 */
proto.cil_onboarding.Class.prototype.setClientUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_organization_uuid = 2;
 * @return {string}
 */
proto.cil_onboarding.Class.prototype.getClientOrganizationUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.Class} returns this
 */
proto.cil_onboarding.Class.prototype.setClientOrganizationUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.cil_onboarding.Class.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.Class} returns this
 */
proto.cil_onboarding.Class.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string client_school_uuid = 4;
 * @return {string}
 */
proto.cil_onboarding.Class.prototype.getClientSchoolUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.Class} returns this
 */
proto.cil_onboarding.Class.prototype.setClientSchoolUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string program_ids = 5;
 * @return {!Array<string>}
 */
proto.cil_onboarding.Class.prototype.getProgramIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.Class} returns this
 */
proto.cil_onboarding.Class.prototype.setProgramIdsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.Class} returns this
 */
proto.cil_onboarding.Class.prototype.addProgramIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.Class} returns this
 */
proto.cil_onboarding.Class.prototype.clearProgramIdsList = function() {
  return this.setProgramIdsList([]);
};


/**
 * optional string short_code = 6;
 * @return {string}
 */
proto.cil_onboarding.Class.prototype.getShortCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.Class} returns this
 */
proto.cil_onboarding.Class.prototype.setShortCode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.User.repeatedFields_ = [11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.User.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientOrganizationUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clientSchoolUuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    email: jspb.Message.getFieldWithDefault(msg, 4, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 5, ""),
    username: jspb.Message.getFieldWithDefault(msg, 6, ""),
    givenName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    familyName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 9, 0),
    dateOfBirth: jspb.Message.getFieldWithDefault(msg, 10, ""),
    classIdsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    roleIdsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.User}
 */
proto.cil_onboarding.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.User;
  return proto.cil_onboarding.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.User}
 */
proto.cil_onboarding.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientOrganizationUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientSchoolUuid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGivenName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFamilyName(value);
      break;
    case 9:
      var value = /** @type {!proto.cil_onboarding.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateOfBirth(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addClassIds(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoleIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientOrganizationUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientSchoolUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGivenName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFamilyName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getDateOfBirth();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getClassIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getRoleIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
};


/**
 * optional string client_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.User.prototype.getClientUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setClientUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_organization_uuid = 2;
 * @return {string}
 */
proto.cil_onboarding.User.prototype.getClientOrganizationUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setClientOrganizationUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string client_school_uuid = 3;
 * @return {string}
 */
proto.cil_onboarding.User.prototype.getClientSchoolUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setClientSchoolUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.cil_onboarding.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string phone = 5;
 * @return {string}
 */
proto.cil_onboarding.User.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string username = 6;
 * @return {string}
 */
proto.cil_onboarding.User.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string given_name = 7;
 * @return {string}
 */
proto.cil_onboarding.User.prototype.getGivenName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setGivenName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string family_name = 8;
 * @return {string}
 */
proto.cil_onboarding.User.prototype.getFamilyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setFamilyName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Gender gender = 9;
 * @return {!proto.cil_onboarding.Gender}
 */
proto.cil_onboarding.User.prototype.getGender = function() {
  return /** @type {!proto.cil_onboarding.Gender} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.cil_onboarding.Gender} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setGender = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional string date_of_birth = 10;
 * @return {string}
 */
proto.cil_onboarding.User.prototype.getDateOfBirth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setDateOfBirth = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated string class_ids = 11;
 * @return {!Array<string>}
 */
proto.cil_onboarding.User.prototype.getClassIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setClassIdsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.addClassIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.clearClassIdsList = function() {
  return this.setClassIdsList([]);
};


/**
 * repeated string role_ids = 12;
 * @return {!Array<string>}
 */
proto.cil_onboarding.User.prototype.getRoleIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.setRoleIdsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.addRoleIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.User} returns this
 */
proto.cil_onboarding.User.prototype.clearRoleIdsList = function() {
  return this.setRoleIdsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cil_onboarding.OnboardingRequest.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.cil_onboarding.OnboardingRequest.EntityCase = {
  ENTITY_NOT_SET: 0,
  ORGANIZATION: 1,
  SCHOOL: 2,
  CLASS: 3,
  USER: 4
};

/**
 * @return {proto.cil_onboarding.OnboardingRequest.EntityCase}
 */
proto.cil_onboarding.OnboardingRequest.prototype.getEntityCase = function() {
  return /** @type {proto.cil_onboarding.OnboardingRequest.EntityCase} */(jspb.Message.computeOneofCase(this, proto.cil_onboarding.OnboardingRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.OnboardingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.OnboardingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.OnboardingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.OnboardingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: (f = msg.getOrganization()) && proto.cil_onboarding.Organization.toObject(includeInstance, f),
    school: (f = msg.getSchool()) && proto.cil_onboarding.School.toObject(includeInstance, f),
    pb_class: (f = msg.getClass()) && proto.cil_onboarding.Class.toObject(includeInstance, f),
    user: (f = msg.getUser()) && proto.cil_onboarding.User.toObject(includeInstance, f),
    requestId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.OnboardingRequest}
 */
proto.cil_onboarding.OnboardingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.OnboardingRequest;
  return proto.cil_onboarding.OnboardingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.OnboardingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.OnboardingRequest}
 */
proto.cil_onboarding.OnboardingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cil_onboarding.Organization;
      reader.readMessage(value,proto.cil_onboarding.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.cil_onboarding.School;
      reader.readMessage(value,proto.cil_onboarding.School.deserializeBinaryFromReader);
      msg.setSchool(value);
      break;
    case 3:
      var value = new proto.cil_onboarding.Class;
      reader.readMessage(value,proto.cil_onboarding.Class.deserializeBinaryFromReader);
      msg.setClass(value);
      break;
    case 4:
      var value = new proto.cil_onboarding.User;
      reader.readMessage(value,proto.cil_onboarding.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.OnboardingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.OnboardingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.OnboardingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.OnboardingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cil_onboarding.Organization.serializeBinaryToWriter
    );
  }
  f = message.getSchool();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cil_onboarding.School.serializeBinaryToWriter
    );
  }
  f = message.getClass();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cil_onboarding.Class.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cil_onboarding.User.serializeBinaryToWriter
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional Organization organization = 1;
 * @return {?proto.cil_onboarding.Organization}
 */
proto.cil_onboarding.OnboardingRequest.prototype.getOrganization = function() {
  return /** @type{?proto.cil_onboarding.Organization} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.Organization, 1));
};


/**
 * @param {?proto.cil_onboarding.Organization|undefined} value
 * @return {!proto.cil_onboarding.OnboardingRequest} returns this
*/
proto.cil_onboarding.OnboardingRequest.prototype.setOrganization = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cil_onboarding.OnboardingRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.OnboardingRequest} returns this
 */
proto.cil_onboarding.OnboardingRequest.prototype.clearOrganization = function() {
  return this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.OnboardingRequest.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional School school = 2;
 * @return {?proto.cil_onboarding.School}
 */
proto.cil_onboarding.OnboardingRequest.prototype.getSchool = function() {
  return /** @type{?proto.cil_onboarding.School} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.School, 2));
};


/**
 * @param {?proto.cil_onboarding.School|undefined} value
 * @return {!proto.cil_onboarding.OnboardingRequest} returns this
*/
proto.cil_onboarding.OnboardingRequest.prototype.setSchool = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cil_onboarding.OnboardingRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.OnboardingRequest} returns this
 */
proto.cil_onboarding.OnboardingRequest.prototype.clearSchool = function() {
  return this.setSchool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.OnboardingRequest.prototype.hasSchool = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Class class = 3;
 * @return {?proto.cil_onboarding.Class}
 */
proto.cil_onboarding.OnboardingRequest.prototype.getClass = function() {
  return /** @type{?proto.cil_onboarding.Class} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.Class, 3));
};


/**
 * @param {?proto.cil_onboarding.Class|undefined} value
 * @return {!proto.cil_onboarding.OnboardingRequest} returns this
*/
proto.cil_onboarding.OnboardingRequest.prototype.setClass = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cil_onboarding.OnboardingRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.OnboardingRequest} returns this
 */
proto.cil_onboarding.OnboardingRequest.prototype.clearClass = function() {
  return this.setClass(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.OnboardingRequest.prototype.hasClass = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional User user = 4;
 * @return {?proto.cil_onboarding.User}
 */
proto.cil_onboarding.OnboardingRequest.prototype.getUser = function() {
  return /** @type{?proto.cil_onboarding.User} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.User, 4));
};


/**
 * @param {?proto.cil_onboarding.User|undefined} value
 * @return {!proto.cil_onboarding.OnboardingRequest} returns this
*/
proto.cil_onboarding.OnboardingRequest.prototype.setUser = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cil_onboarding.OnboardingRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.OnboardingRequest} returns this
 */
proto.cil_onboarding.OnboardingRequest.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.OnboardingRequest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string request_id = 5;
 * @return {string}
 */
proto.cil_onboarding.OnboardingRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.OnboardingRequest} returns this
 */
proto.cil_onboarding.OnboardingRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.RequestInformation.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.RequestInformation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.RequestInformation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.RequestInformation.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.RequestInformation}
 */
proto.cil_onboarding.RequestInformation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.RequestInformation;
  return proto.cil_onboarding.RequestInformation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.RequestInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.RequestInformation}
 */
proto.cil_onboarding.RequestInformation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.RequestInformation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.RequestInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.RequestInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.RequestInformation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cil_onboarding.RequestInformation.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.RequestInformation} returns this
 */
proto.cil_onboarding.RequestInformation.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.cil_onboarding.Gender = {
  MALE: 0,
  FEMALE: 1
};

goog.object.extend(exports, proto.cil_onboarding);
