// source: api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.cil_onboarding.api.Action', null, global);
goog.exportSymbol('proto.cil_onboarding.api.AddClassesToSchool', null, global);
goog.exportSymbol('proto.cil_onboarding.api.AddOrganizationRolesToUser', null, global);
goog.exportSymbol('proto.cil_onboarding.api.AddProgramsToClass', null, global);
goog.exportSymbol('proto.cil_onboarding.api.AddProgramsToSchool', null, global);
goog.exportSymbol('proto.cil_onboarding.api.AddUserToSchool', null, global);
goog.exportSymbol('proto.cil_onboarding.api.AddUsersToClass', null, global);
goog.exportSymbol('proto.cil_onboarding.api.AddUsersToOrganizations', null, global);
goog.exportSymbol('proto.cil_onboarding.api.BatchOnboarding', null, global);
goog.exportSymbol('proto.cil_onboarding.api.Class', null, global);
goog.exportSymbol('proto.cil_onboarding.api.Entity', null, global);
goog.exportSymbol('proto.cil_onboarding.api.EntityAlreadyExistsError', null, global);
goog.exportSymbol('proto.cil_onboarding.api.EntityDoesNotExistError', null, global);
goog.exportSymbol('proto.cil_onboarding.api.Error', null, global);
goog.exportSymbol('proto.cil_onboarding.api.Error.ErrorTypeCase', null, global);
goog.exportSymbol('proto.cil_onboarding.api.Gender', null, global);
goog.exportSymbol('proto.cil_onboarding.api.InternalServerError', null, global);
goog.exportSymbol('proto.cil_onboarding.api.InvalidRequestError', null, global);
goog.exportSymbol('proto.cil_onboarding.api.Link', null, global);
goog.exportSymbol('proto.cil_onboarding.api.Link.LinkCase', null, global);
goog.exportSymbol('proto.cil_onboarding.api.OnboardingRequest', null, global);
goog.exportSymbol('proto.cil_onboarding.api.OnboardingRequest.PayloadCase', null, global);
goog.exportSymbol('proto.cil_onboarding.api.Organization', null, global);
goog.exportSymbol('proto.cil_onboarding.api.PathBasedError', null, global);
goog.exportSymbol('proto.cil_onboarding.api.Response', null, global);
goog.exportSymbol('proto.cil_onboarding.api.Responses', null, global);
goog.exportSymbol('proto.cil_onboarding.api.School', null, global);
goog.exportSymbol('proto.cil_onboarding.api.User', null, global);
goog.exportSymbol('proto.cil_onboarding.api.ValidationError', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.Organization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cil_onboarding.api.Organization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.Organization.displayName = 'proto.cil_onboarding.api.Organization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.School = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cil_onboarding.api.School, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.School.displayName = 'proto.cil_onboarding.api.School';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.Class = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cil_onboarding.api.Class, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.Class.displayName = 'proto.cil_onboarding.api.Class';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.User.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.User.displayName = 'proto.cil_onboarding.api.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.AddUsersToClass = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.AddUsersToClass.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.AddUsersToClass, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.AddUsersToClass.displayName = 'proto.cil_onboarding.api.AddUsersToClass';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.AddUserToSchool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.AddUserToSchool.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.AddUserToSchool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.AddUserToSchool.displayName = 'proto.cil_onboarding.api.AddUserToSchool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.AddProgramsToSchool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.AddProgramsToSchool.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.AddProgramsToSchool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.AddProgramsToSchool.displayName = 'proto.cil_onboarding.api.AddProgramsToSchool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.AddProgramsToClass = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.AddProgramsToClass.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.AddProgramsToClass, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.AddProgramsToClass.displayName = 'proto.cil_onboarding.api.AddProgramsToClass';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.AddClassesToSchool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.AddClassesToSchool.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.AddClassesToSchool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.AddClassesToSchool.displayName = 'proto.cil_onboarding.api.AddClassesToSchool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.AddOrganizationRolesToUser.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.AddOrganizationRolesToUser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.AddOrganizationRolesToUser.displayName = 'proto.cil_onboarding.api.AddOrganizationRolesToUser';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.AddUsersToOrganizations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.AddUsersToOrganizations.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.AddUsersToOrganizations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.AddUsersToOrganizations.displayName = 'proto.cil_onboarding.api.AddUsersToOrganizations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.Link = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cil_onboarding.api.Link.oneofGroups_);
};
goog.inherits(proto.cil_onboarding.api.Link, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.Link.displayName = 'proto.cil_onboarding.api.Link';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.OnboardingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cil_onboarding.api.OnboardingRequest.oneofGroups_);
};
goog.inherits(proto.cil_onboarding.api.OnboardingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.OnboardingRequest.displayName = 'proto.cil_onboarding.api.OnboardingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.BatchOnboarding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.BatchOnboarding.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.BatchOnboarding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.BatchOnboarding.displayName = 'proto.cil_onboarding.api.BatchOnboarding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.Responses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.Responses.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.Responses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.Responses.displayName = 'proto.cil_onboarding.api.Responses';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cil_onboarding.api.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.Response.displayName = 'proto.cil_onboarding.api.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cil_onboarding.api.Error.oneofGroups_);
};
goog.inherits(proto.cil_onboarding.api.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.Error.displayName = 'proto.cil_onboarding.api.Error';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.ValidationError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.ValidationError.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.ValidationError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.ValidationError.displayName = 'proto.cil_onboarding.api.ValidationError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.InternalServerError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.InternalServerError.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.InternalServerError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.InternalServerError.displayName = 'proto.cil_onboarding.api.InternalServerError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.EntityAlreadyExistsError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.EntityAlreadyExistsError.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.EntityAlreadyExistsError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.EntityAlreadyExistsError.displayName = 'proto.cil_onboarding.api.EntityAlreadyExistsError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.EntityDoesNotExistError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.EntityDoesNotExistError.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.EntityDoesNotExistError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.EntityDoesNotExistError.displayName = 'proto.cil_onboarding.api.EntityDoesNotExistError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.InvalidRequestError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.InvalidRequestError.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.InvalidRequestError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.InvalidRequestError.displayName = 'proto.cil_onboarding.api.InvalidRequestError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cil_onboarding.api.PathBasedError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cil_onboarding.api.PathBasedError.repeatedFields_, null);
};
goog.inherits(proto.cil_onboarding.api.PathBasedError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cil_onboarding.api.PathBasedError.displayName = 'proto.cil_onboarding.api.PathBasedError';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.Organization.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.Organization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.Organization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Organization.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.Organization}
 */
proto.cil_onboarding.api.Organization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.Organization;
  return proto.cil_onboarding.api.Organization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.Organization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.Organization}
 */
proto.cil_onboarding.api.Organization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.Organization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.Organization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.Organization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Organization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string external_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.api.Organization.prototype.getExternalUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.Organization} returns this
 */
proto.cil_onboarding.api.Organization.prototype.setExternalUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.cil_onboarding.api.Organization.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.Organization} returns this
 */
proto.cil_onboarding.api.Organization.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.School.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.School.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.School} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.School.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalOrganizationUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    shortCode: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.School}
 */
proto.cil_onboarding.api.School.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.School;
  return proto.cil_onboarding.api.School.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.School} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.School}
 */
proto.cil_onboarding.api.School.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalOrganizationUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.School.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.School.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.School} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.School.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalOrganizationUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getShortCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string external_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.api.School.prototype.getExternalUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.School} returns this
 */
proto.cil_onboarding.api.School.prototype.setExternalUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string external_organization_uuid = 2;
 * @return {string}
 */
proto.cil_onboarding.api.School.prototype.getExternalOrganizationUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.School} returns this
 */
proto.cil_onboarding.api.School.prototype.setExternalOrganizationUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.cil_onboarding.api.School.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.School} returns this
 */
proto.cil_onboarding.api.School.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string short_code = 5;
 * @return {string}
 */
proto.cil_onboarding.api.School.prototype.getShortCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.School} returns this
 */
proto.cil_onboarding.api.School.prototype.setShortCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.Class.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.Class.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.Class} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Class.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalOrganizationUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    externalSchoolUuid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.Class}
 */
proto.cil_onboarding.api.Class.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.Class;
  return proto.cil_onboarding.api.Class.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.Class} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.Class}
 */
proto.cil_onboarding.api.Class.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalOrganizationUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalSchoolUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.Class.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.Class.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.Class} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Class.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalOrganizationUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExternalSchoolUuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string external_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.api.Class.prototype.getExternalUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.Class} returns this
 */
proto.cil_onboarding.api.Class.prototype.setExternalUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string external_organization_uuid = 2;
 * @return {string}
 */
proto.cil_onboarding.api.Class.prototype.getExternalOrganizationUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.Class} returns this
 */
proto.cil_onboarding.api.Class.prototype.setExternalOrganizationUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.cil_onboarding.api.Class.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.Class} returns this
 */
proto.cil_onboarding.api.Class.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string external_school_uuid = 4;
 * @return {string}
 */
proto.cil_onboarding.api.Class.prototype.getExternalSchoolUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.Class} returns this
 */
proto.cil_onboarding.api.Class.prototype.setExternalSchoolUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.User.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.User.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalOrganizationUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 4, ""),
    username: jspb.Message.getFieldWithDefault(msg, 5, ""),
    givenName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    familyName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 8, 0),
    dateOfBirth: jspb.Message.getFieldWithDefault(msg, 9, ""),
    shortCode: jspb.Message.getFieldWithDefault(msg, 10, ""),
    roleNamesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.User}
 */
proto.cil_onboarding.api.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.User;
  return proto.cil_onboarding.api.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.User}
 */
proto.cil_onboarding.api.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalOrganizationUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGivenName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFamilyName(value);
      break;
    case 8:
      var value = /** @type {!proto.cil_onboarding.api.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateOfBirth(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortCode(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoleNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalOrganizationUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGivenName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFamilyName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getDateOfBirth();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getShortCode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRoleNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
};


/**
 * optional string external_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.api.User.prototype.getExternalUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.setExternalUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string external_organization_uuid = 2;
 * @return {string}
 */
proto.cil_onboarding.api.User.prototype.getExternalOrganizationUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.setExternalOrganizationUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.cil_onboarding.api.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string phone = 4;
 * @return {string}
 */
proto.cil_onboarding.api.User.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string username = 5;
 * @return {string}
 */
proto.cil_onboarding.api.User.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string given_name = 6;
 * @return {string}
 */
proto.cil_onboarding.api.User.prototype.getGivenName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.setGivenName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string family_name = 7;
 * @return {string}
 */
proto.cil_onboarding.api.User.prototype.getFamilyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.setFamilyName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Gender gender = 8;
 * @return {!proto.cil_onboarding.api.Gender}
 */
proto.cil_onboarding.api.User.prototype.getGender = function() {
  return /** @type {!proto.cil_onboarding.api.Gender} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.cil_onboarding.api.Gender} value
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.setGender = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string date_of_birth = 9;
 * @return {string}
 */
proto.cil_onboarding.api.User.prototype.getDateOfBirth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.setDateOfBirth = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string short_code = 10;
 * @return {string}
 */
proto.cil_onboarding.api.User.prototype.getShortCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.setShortCode = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated string role_names = 11;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.User.prototype.getRoleNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.setRoleNamesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.addRoleNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.User} returns this
 */
proto.cil_onboarding.api.User.prototype.clearRoleNamesList = function() {
  return this.setRoleNamesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.AddUsersToClass.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.AddUsersToClass.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.AddUsersToClass} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddUsersToClass.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalClassUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalTeacherUuidList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    externalStudentUuidList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.AddUsersToClass}
 */
proto.cil_onboarding.api.AddUsersToClass.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.AddUsersToClass;
  return proto.cil_onboarding.api.AddUsersToClass.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.AddUsersToClass} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.AddUsersToClass}
 */
proto.cil_onboarding.api.AddUsersToClass.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalClassUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addExternalTeacherUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addExternalStudentUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.AddUsersToClass.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.AddUsersToClass} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddUsersToClass.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalClassUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalTeacherUuidList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getExternalStudentUuidList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string external_class_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.getExternalClassUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.AddUsersToClass} returns this
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.setExternalClassUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string external_teacher_uuid = 2;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.getExternalTeacherUuidList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.AddUsersToClass} returns this
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.setExternalTeacherUuidList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.AddUsersToClass} returns this
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.addExternalTeacherUuid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.AddUsersToClass} returns this
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.clearExternalTeacherUuidList = function() {
  return this.setExternalTeacherUuidList([]);
};


/**
 * repeated string external_student_uuid = 3;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.getExternalStudentUuidList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.AddUsersToClass} returns this
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.setExternalStudentUuidList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.AddUsersToClass} returns this
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.addExternalStudentUuid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.AddUsersToClass} returns this
 */
proto.cil_onboarding.api.AddUsersToClass.prototype.clearExternalStudentUuidList = function() {
  return this.setExternalStudentUuidList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.AddUserToSchool.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.AddUserToSchool.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.AddUserToSchool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.AddUserToSchool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddUserToSchool.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalUserUuidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    externalSchoolUuid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.AddUserToSchool}
 */
proto.cil_onboarding.api.AddUserToSchool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.AddUserToSchool;
  return proto.cil_onboarding.api.AddUserToSchool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.AddUserToSchool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.AddUserToSchool}
 */
proto.cil_onboarding.api.AddUserToSchool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addExternalUserUuids(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalSchoolUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.AddUserToSchool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.AddUserToSchool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.AddUserToSchool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddUserToSchool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalUserUuidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getExternalSchoolUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated string external_user_uuids = 1;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.AddUserToSchool.prototype.getExternalUserUuidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.AddUserToSchool} returns this
 */
proto.cil_onboarding.api.AddUserToSchool.prototype.setExternalUserUuidsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.AddUserToSchool} returns this
 */
proto.cil_onboarding.api.AddUserToSchool.prototype.addExternalUserUuids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.AddUserToSchool} returns this
 */
proto.cil_onboarding.api.AddUserToSchool.prototype.clearExternalUserUuidsList = function() {
  return this.setExternalUserUuidsList([]);
};


/**
 * optional string external_school_uuid = 2;
 * @return {string}
 */
proto.cil_onboarding.api.AddUserToSchool.prototype.getExternalSchoolUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.AddUserToSchool} returns this
 */
proto.cil_onboarding.api.AddUserToSchool.prototype.setExternalSchoolUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.AddProgramsToSchool.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.AddProgramsToSchool.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.AddProgramsToSchool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.AddProgramsToSchool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddProgramsToSchool.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalOrganizationUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalSchoolUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    programNamesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.AddProgramsToSchool}
 */
proto.cil_onboarding.api.AddProgramsToSchool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.AddProgramsToSchool;
  return proto.cil_onboarding.api.AddProgramsToSchool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.AddProgramsToSchool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.AddProgramsToSchool}
 */
proto.cil_onboarding.api.AddProgramsToSchool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalOrganizationUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalSchoolUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addProgramNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.AddProgramsToSchool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.AddProgramsToSchool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.AddProgramsToSchool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddProgramsToSchool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalOrganizationUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalSchoolUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProgramNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string external_organization_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.api.AddProgramsToSchool.prototype.getExternalOrganizationUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.AddProgramsToSchool} returns this
 */
proto.cil_onboarding.api.AddProgramsToSchool.prototype.setExternalOrganizationUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string external_school_uuid = 2;
 * @return {string}
 */
proto.cil_onboarding.api.AddProgramsToSchool.prototype.getExternalSchoolUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.AddProgramsToSchool} returns this
 */
proto.cil_onboarding.api.AddProgramsToSchool.prototype.setExternalSchoolUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string program_names = 3;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.AddProgramsToSchool.prototype.getProgramNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.AddProgramsToSchool} returns this
 */
proto.cil_onboarding.api.AddProgramsToSchool.prototype.setProgramNamesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.AddProgramsToSchool} returns this
 */
proto.cil_onboarding.api.AddProgramsToSchool.prototype.addProgramNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.AddProgramsToSchool} returns this
 */
proto.cil_onboarding.api.AddProgramsToSchool.prototype.clearProgramNamesList = function() {
  return this.setProgramNamesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.AddProgramsToClass.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.AddProgramsToClass.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.AddProgramsToClass.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.AddProgramsToClass} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddProgramsToClass.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalOrganizationUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalClassUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    programNamesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.AddProgramsToClass}
 */
proto.cil_onboarding.api.AddProgramsToClass.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.AddProgramsToClass;
  return proto.cil_onboarding.api.AddProgramsToClass.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.AddProgramsToClass} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.AddProgramsToClass}
 */
proto.cil_onboarding.api.AddProgramsToClass.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalOrganizationUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalClassUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addProgramNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.AddProgramsToClass.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.AddProgramsToClass.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.AddProgramsToClass} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddProgramsToClass.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalOrganizationUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalClassUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProgramNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string external_organization_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.api.AddProgramsToClass.prototype.getExternalOrganizationUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.AddProgramsToClass} returns this
 */
proto.cil_onboarding.api.AddProgramsToClass.prototype.setExternalOrganizationUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string external_class_uuid = 2;
 * @return {string}
 */
proto.cil_onboarding.api.AddProgramsToClass.prototype.getExternalClassUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.AddProgramsToClass} returns this
 */
proto.cil_onboarding.api.AddProgramsToClass.prototype.setExternalClassUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string program_names = 3;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.AddProgramsToClass.prototype.getProgramNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.AddProgramsToClass} returns this
 */
proto.cil_onboarding.api.AddProgramsToClass.prototype.setProgramNamesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.AddProgramsToClass} returns this
 */
proto.cil_onboarding.api.AddProgramsToClass.prototype.addProgramNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.AddProgramsToClass} returns this
 */
proto.cil_onboarding.api.AddProgramsToClass.prototype.clearProgramNamesList = function() {
  return this.setProgramNamesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.AddClassesToSchool.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.AddClassesToSchool.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.AddClassesToSchool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.AddClassesToSchool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddClassesToSchool.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalSchoolUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalClassUuidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.AddClassesToSchool}
 */
proto.cil_onboarding.api.AddClassesToSchool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.AddClassesToSchool;
  return proto.cil_onboarding.api.AddClassesToSchool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.AddClassesToSchool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.AddClassesToSchool}
 */
proto.cil_onboarding.api.AddClassesToSchool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalSchoolUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addExternalClassUuids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.AddClassesToSchool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.AddClassesToSchool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.AddClassesToSchool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddClassesToSchool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalSchoolUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalClassUuidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string external_school_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.api.AddClassesToSchool.prototype.getExternalSchoolUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.AddClassesToSchool} returns this
 */
proto.cil_onboarding.api.AddClassesToSchool.prototype.setExternalSchoolUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string external_class_uuids = 2;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.AddClassesToSchool.prototype.getExternalClassUuidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.AddClassesToSchool} returns this
 */
proto.cil_onboarding.api.AddClassesToSchool.prototype.setExternalClassUuidsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.AddClassesToSchool} returns this
 */
proto.cil_onboarding.api.AddClassesToSchool.prototype.addExternalClassUuids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.AddClassesToSchool} returns this
 */
proto.cil_onboarding.api.AddClassesToSchool.prototype.clearExternalClassUuidsList = function() {
  return this.setExternalClassUuidsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.AddOrganizationRolesToUser.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.AddOrganizationRolesToUser} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalOrganizationUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalUserUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    roleNamesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.AddOrganizationRolesToUser}
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.AddOrganizationRolesToUser;
  return proto.cil_onboarding.api.AddOrganizationRolesToUser.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.AddOrganizationRolesToUser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.AddOrganizationRolesToUser}
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalOrganizationUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalUserUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoleNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.AddOrganizationRolesToUser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.AddOrganizationRolesToUser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalOrganizationUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalUserUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRoleNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string external_organization_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.prototype.getExternalOrganizationUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.AddOrganizationRolesToUser} returns this
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.prototype.setExternalOrganizationUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string external_user_uuid = 2;
 * @return {string}
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.prototype.getExternalUserUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.AddOrganizationRolesToUser} returns this
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.prototype.setExternalUserUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string role_names = 3;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.prototype.getRoleNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.AddOrganizationRolesToUser} returns this
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.prototype.setRoleNamesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.AddOrganizationRolesToUser} returns this
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.prototype.addRoleNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.AddOrganizationRolesToUser} returns this
 */
proto.cil_onboarding.api.AddOrganizationRolesToUser.prototype.clearRoleNamesList = function() {
  return this.setRoleNamesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.AddUsersToOrganizations.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.AddUsersToOrganizations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.AddUsersToOrganizations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddUsersToOrganizations.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalOrganizationUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roleNamesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    externalUserUuidsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.AddUsersToOrganizations}
 */
proto.cil_onboarding.api.AddUsersToOrganizations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.AddUsersToOrganizations;
  return proto.cil_onboarding.api.AddUsersToOrganizations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.AddUsersToOrganizations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.AddUsersToOrganizations}
 */
proto.cil_onboarding.api.AddUsersToOrganizations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalOrganizationUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoleNames(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addExternalUserUuids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.AddUsersToOrganizations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.AddUsersToOrganizations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.AddUsersToOrganizations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalOrganizationUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoleNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getExternalUserUuidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string external_organization_uuid = 1;
 * @return {string}
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.getExternalOrganizationUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.AddUsersToOrganizations} returns this
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.setExternalOrganizationUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string role_names = 2;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.getRoleNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.AddUsersToOrganizations} returns this
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.setRoleNamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.AddUsersToOrganizations} returns this
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.addRoleNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.AddUsersToOrganizations} returns this
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.clearRoleNamesList = function() {
  return this.setRoleNamesList([]);
};


/**
 * repeated string external_user_uuids = 3;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.getExternalUserUuidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.AddUsersToOrganizations} returns this
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.setExternalUserUuidsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.AddUsersToOrganizations} returns this
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.addExternalUserUuids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.AddUsersToOrganizations} returns this
 */
proto.cil_onboarding.api.AddUsersToOrganizations.prototype.clearExternalUserUuidsList = function() {
  return this.setExternalUserUuidsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cil_onboarding.api.Link.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.cil_onboarding.api.Link.LinkCase = {
  LINK_NOT_SET: 0,
  ADD_USERS_TO_ORGANIZATIONS: 1,
  ADD_ORGANIZATION_ROLES_TO_USER: 2,
  ADD_USER_TO_SCHOOL: 3,
  ADD_USERS_TO_CLASS: 4,
  ADD_PROGRAMS_TO_SCHOOL: 5,
  ADD_PROGRAMS_TO_CLASS: 6,
  ADD_CLASSES_TO_SCHOOL: 7
};

/**
 * @return {proto.cil_onboarding.api.Link.LinkCase}
 */
proto.cil_onboarding.api.Link.prototype.getLinkCase = function() {
  return /** @type {proto.cil_onboarding.api.Link.LinkCase} */(jspb.Message.computeOneofCase(this, proto.cil_onboarding.api.Link.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.Link.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.Link.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.Link} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Link.toObject = function(includeInstance, msg) {
  var f, obj = {
    addUsersToOrganizations: (f = msg.getAddUsersToOrganizations()) && proto.cil_onboarding.api.AddUsersToOrganizations.toObject(includeInstance, f),
    addOrganizationRolesToUser: (f = msg.getAddOrganizationRolesToUser()) && proto.cil_onboarding.api.AddOrganizationRolesToUser.toObject(includeInstance, f),
    addUserToSchool: (f = msg.getAddUserToSchool()) && proto.cil_onboarding.api.AddUserToSchool.toObject(includeInstance, f),
    addUsersToClass: (f = msg.getAddUsersToClass()) && proto.cil_onboarding.api.AddUsersToClass.toObject(includeInstance, f),
    addProgramsToSchool: (f = msg.getAddProgramsToSchool()) && proto.cil_onboarding.api.AddProgramsToSchool.toObject(includeInstance, f),
    addProgramsToClass: (f = msg.getAddProgramsToClass()) && proto.cil_onboarding.api.AddProgramsToClass.toObject(includeInstance, f),
    addClassesToSchool: (f = msg.getAddClassesToSchool()) && proto.cil_onboarding.api.AddClassesToSchool.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.Link}
 */
proto.cil_onboarding.api.Link.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.Link;
  return proto.cil_onboarding.api.Link.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.Link} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.Link}
 */
proto.cil_onboarding.api.Link.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cil_onboarding.api.AddUsersToOrganizations;
      reader.readMessage(value,proto.cil_onboarding.api.AddUsersToOrganizations.deserializeBinaryFromReader);
      msg.setAddUsersToOrganizations(value);
      break;
    case 2:
      var value = new proto.cil_onboarding.api.AddOrganizationRolesToUser;
      reader.readMessage(value,proto.cil_onboarding.api.AddOrganizationRolesToUser.deserializeBinaryFromReader);
      msg.setAddOrganizationRolesToUser(value);
      break;
    case 3:
      var value = new proto.cil_onboarding.api.AddUserToSchool;
      reader.readMessage(value,proto.cil_onboarding.api.AddUserToSchool.deserializeBinaryFromReader);
      msg.setAddUserToSchool(value);
      break;
    case 4:
      var value = new proto.cil_onboarding.api.AddUsersToClass;
      reader.readMessage(value,proto.cil_onboarding.api.AddUsersToClass.deserializeBinaryFromReader);
      msg.setAddUsersToClass(value);
      break;
    case 5:
      var value = new proto.cil_onboarding.api.AddProgramsToSchool;
      reader.readMessage(value,proto.cil_onboarding.api.AddProgramsToSchool.deserializeBinaryFromReader);
      msg.setAddProgramsToSchool(value);
      break;
    case 6:
      var value = new proto.cil_onboarding.api.AddProgramsToClass;
      reader.readMessage(value,proto.cil_onboarding.api.AddProgramsToClass.deserializeBinaryFromReader);
      msg.setAddProgramsToClass(value);
      break;
    case 7:
      var value = new proto.cil_onboarding.api.AddClassesToSchool;
      reader.readMessage(value,proto.cil_onboarding.api.AddClassesToSchool.deserializeBinaryFromReader);
      msg.setAddClassesToSchool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.Link.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.Link.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.Link} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Link.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddUsersToOrganizations();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cil_onboarding.api.AddUsersToOrganizations.serializeBinaryToWriter
    );
  }
  f = message.getAddOrganizationRolesToUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cil_onboarding.api.AddOrganizationRolesToUser.serializeBinaryToWriter
    );
  }
  f = message.getAddUserToSchool();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cil_onboarding.api.AddUserToSchool.serializeBinaryToWriter
    );
  }
  f = message.getAddUsersToClass();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cil_onboarding.api.AddUsersToClass.serializeBinaryToWriter
    );
  }
  f = message.getAddProgramsToSchool();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cil_onboarding.api.AddProgramsToSchool.serializeBinaryToWriter
    );
  }
  f = message.getAddProgramsToClass();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cil_onboarding.api.AddProgramsToClass.serializeBinaryToWriter
    );
  }
  f = message.getAddClassesToSchool();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cil_onboarding.api.AddClassesToSchool.serializeBinaryToWriter
    );
  }
};


/**
 * optional AddUsersToOrganizations add_users_to_organizations = 1;
 * @return {?proto.cil_onboarding.api.AddUsersToOrganizations}
 */
proto.cil_onboarding.api.Link.prototype.getAddUsersToOrganizations = function() {
  return /** @type{?proto.cil_onboarding.api.AddUsersToOrganizations} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.AddUsersToOrganizations, 1));
};


/**
 * @param {?proto.cil_onboarding.api.AddUsersToOrganizations|undefined} value
 * @return {!proto.cil_onboarding.api.Link} returns this
*/
proto.cil_onboarding.api.Link.prototype.setAddUsersToOrganizations = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cil_onboarding.api.Link.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Link} returns this
 */
proto.cil_onboarding.api.Link.prototype.clearAddUsersToOrganizations = function() {
  return this.setAddUsersToOrganizations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Link.prototype.hasAddUsersToOrganizations = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AddOrganizationRolesToUser add_organization_roles_to_user = 2;
 * @return {?proto.cil_onboarding.api.AddOrganizationRolesToUser}
 */
proto.cil_onboarding.api.Link.prototype.getAddOrganizationRolesToUser = function() {
  return /** @type{?proto.cil_onboarding.api.AddOrganizationRolesToUser} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.AddOrganizationRolesToUser, 2));
};


/**
 * @param {?proto.cil_onboarding.api.AddOrganizationRolesToUser|undefined} value
 * @return {!proto.cil_onboarding.api.Link} returns this
*/
proto.cil_onboarding.api.Link.prototype.setAddOrganizationRolesToUser = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cil_onboarding.api.Link.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Link} returns this
 */
proto.cil_onboarding.api.Link.prototype.clearAddOrganizationRolesToUser = function() {
  return this.setAddOrganizationRolesToUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Link.prototype.hasAddOrganizationRolesToUser = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AddUserToSchool add_user_to_school = 3;
 * @return {?proto.cil_onboarding.api.AddUserToSchool}
 */
proto.cil_onboarding.api.Link.prototype.getAddUserToSchool = function() {
  return /** @type{?proto.cil_onboarding.api.AddUserToSchool} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.AddUserToSchool, 3));
};


/**
 * @param {?proto.cil_onboarding.api.AddUserToSchool|undefined} value
 * @return {!proto.cil_onboarding.api.Link} returns this
*/
proto.cil_onboarding.api.Link.prototype.setAddUserToSchool = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cil_onboarding.api.Link.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Link} returns this
 */
proto.cil_onboarding.api.Link.prototype.clearAddUserToSchool = function() {
  return this.setAddUserToSchool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Link.prototype.hasAddUserToSchool = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AddUsersToClass add_users_to_class = 4;
 * @return {?proto.cil_onboarding.api.AddUsersToClass}
 */
proto.cil_onboarding.api.Link.prototype.getAddUsersToClass = function() {
  return /** @type{?proto.cil_onboarding.api.AddUsersToClass} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.AddUsersToClass, 4));
};


/**
 * @param {?proto.cil_onboarding.api.AddUsersToClass|undefined} value
 * @return {!proto.cil_onboarding.api.Link} returns this
*/
proto.cil_onboarding.api.Link.prototype.setAddUsersToClass = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cil_onboarding.api.Link.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Link} returns this
 */
proto.cil_onboarding.api.Link.prototype.clearAddUsersToClass = function() {
  return this.setAddUsersToClass(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Link.prototype.hasAddUsersToClass = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional AddProgramsToSchool add_programs_to_school = 5;
 * @return {?proto.cil_onboarding.api.AddProgramsToSchool}
 */
proto.cil_onboarding.api.Link.prototype.getAddProgramsToSchool = function() {
  return /** @type{?proto.cil_onboarding.api.AddProgramsToSchool} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.AddProgramsToSchool, 5));
};


/**
 * @param {?proto.cil_onboarding.api.AddProgramsToSchool|undefined} value
 * @return {!proto.cil_onboarding.api.Link} returns this
*/
proto.cil_onboarding.api.Link.prototype.setAddProgramsToSchool = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.cil_onboarding.api.Link.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Link} returns this
 */
proto.cil_onboarding.api.Link.prototype.clearAddProgramsToSchool = function() {
  return this.setAddProgramsToSchool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Link.prototype.hasAddProgramsToSchool = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional AddProgramsToClass add_programs_to_class = 6;
 * @return {?proto.cil_onboarding.api.AddProgramsToClass}
 */
proto.cil_onboarding.api.Link.prototype.getAddProgramsToClass = function() {
  return /** @type{?proto.cil_onboarding.api.AddProgramsToClass} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.AddProgramsToClass, 6));
};


/**
 * @param {?proto.cil_onboarding.api.AddProgramsToClass|undefined} value
 * @return {!proto.cil_onboarding.api.Link} returns this
*/
proto.cil_onboarding.api.Link.prototype.setAddProgramsToClass = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cil_onboarding.api.Link.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Link} returns this
 */
proto.cil_onboarding.api.Link.prototype.clearAddProgramsToClass = function() {
  return this.setAddProgramsToClass(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Link.prototype.hasAddProgramsToClass = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional AddClassesToSchool add_classes_to_school = 7;
 * @return {?proto.cil_onboarding.api.AddClassesToSchool}
 */
proto.cil_onboarding.api.Link.prototype.getAddClassesToSchool = function() {
  return /** @type{?proto.cil_onboarding.api.AddClassesToSchool} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.AddClassesToSchool, 7));
};


/**
 * @param {?proto.cil_onboarding.api.AddClassesToSchool|undefined} value
 * @return {!proto.cil_onboarding.api.Link} returns this
*/
proto.cil_onboarding.api.Link.prototype.setAddClassesToSchool = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.cil_onboarding.api.Link.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Link} returns this
 */
proto.cil_onboarding.api.Link.prototype.clearAddClassesToSchool = function() {
  return this.setAddClassesToSchool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Link.prototype.hasAddClassesToSchool = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cil_onboarding.api.OnboardingRequest.oneofGroups_ = [[16,17,18,19,20]];

/**
 * @enum {number}
 */
proto.cil_onboarding.api.OnboardingRequest.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  LINK_ENTITIES: 16,
  ORGANIZATION: 17,
  SCHOOL: 18,
  CLASS: 19,
  USER: 20
};

/**
 * @return {proto.cil_onboarding.api.OnboardingRequest.PayloadCase}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.getPayloadCase = function() {
  return /** @type {proto.cil_onboarding.api.OnboardingRequest.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.cil_onboarding.api.OnboardingRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.OnboardingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.OnboardingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.OnboardingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    action: jspb.Message.getFieldWithDefault(msg, 2, 0),
    linkEntities: (f = msg.getLinkEntities()) && proto.cil_onboarding.api.Link.toObject(includeInstance, f),
    organization: (f = msg.getOrganization()) && proto.cil_onboarding.api.Organization.toObject(includeInstance, f),
    school: (f = msg.getSchool()) && proto.cil_onboarding.api.School.toObject(includeInstance, f),
    pb_class: (f = msg.getClass()) && proto.cil_onboarding.api.Class.toObject(includeInstance, f),
    user: (f = msg.getUser()) && proto.cil_onboarding.api.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.OnboardingRequest}
 */
proto.cil_onboarding.api.OnboardingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.OnboardingRequest;
  return proto.cil_onboarding.api.OnboardingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.OnboardingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.OnboardingRequest}
 */
proto.cil_onboarding.api.OnboardingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {!proto.cil_onboarding.api.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 16:
      var value = new proto.cil_onboarding.api.Link;
      reader.readMessage(value,proto.cil_onboarding.api.Link.deserializeBinaryFromReader);
      msg.setLinkEntities(value);
      break;
    case 17:
      var value = new proto.cil_onboarding.api.Organization;
      reader.readMessage(value,proto.cil_onboarding.api.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 18:
      var value = new proto.cil_onboarding.api.School;
      reader.readMessage(value,proto.cil_onboarding.api.School.deserializeBinaryFromReader);
      msg.setSchool(value);
      break;
    case 19:
      var value = new proto.cil_onboarding.api.Class;
      reader.readMessage(value,proto.cil_onboarding.api.Class.deserializeBinaryFromReader);
      msg.setClass(value);
      break;
    case 20:
      var value = new proto.cil_onboarding.api.User;
      reader.readMessage(value,proto.cil_onboarding.api.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.OnboardingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.OnboardingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.OnboardingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLinkEntities();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.cil_onboarding.api.Link.serializeBinaryToWriter
    );
  }
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.cil_onboarding.api.Organization.serializeBinaryToWriter
    );
  }
  f = message.getSchool();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.cil_onboarding.api.School.serializeBinaryToWriter
    );
  }
  f = message.getClass();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.cil_onboarding.api.Class.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.cil_onboarding.api.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Action action = 2;
 * @return {!proto.cil_onboarding.api.Action}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.getAction = function() {
  return /** @type {!proto.cil_onboarding.api.Action} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cil_onboarding.api.Action} value
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Link link_entities = 16;
 * @return {?proto.cil_onboarding.api.Link}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.getLinkEntities = function() {
  return /** @type{?proto.cil_onboarding.api.Link} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.Link, 16));
};


/**
 * @param {?proto.cil_onboarding.api.Link|undefined} value
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
*/
proto.cil_onboarding.api.OnboardingRequest.prototype.setLinkEntities = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.cil_onboarding.api.OnboardingRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.clearLinkEntities = function() {
  return this.setLinkEntities(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.hasLinkEntities = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional Organization organization = 17;
 * @return {?proto.cil_onboarding.api.Organization}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.getOrganization = function() {
  return /** @type{?proto.cil_onboarding.api.Organization} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.Organization, 17));
};


/**
 * @param {?proto.cil_onboarding.api.Organization|undefined} value
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
*/
proto.cil_onboarding.api.OnboardingRequest.prototype.setOrganization = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.cil_onboarding.api.OnboardingRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.clearOrganization = function() {
  return this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional School school = 18;
 * @return {?proto.cil_onboarding.api.School}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.getSchool = function() {
  return /** @type{?proto.cil_onboarding.api.School} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.School, 18));
};


/**
 * @param {?proto.cil_onboarding.api.School|undefined} value
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
*/
proto.cil_onboarding.api.OnboardingRequest.prototype.setSchool = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.cil_onboarding.api.OnboardingRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.clearSchool = function() {
  return this.setSchool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.hasSchool = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Class class = 19;
 * @return {?proto.cil_onboarding.api.Class}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.getClass = function() {
  return /** @type{?proto.cil_onboarding.api.Class} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.Class, 19));
};


/**
 * @param {?proto.cil_onboarding.api.Class|undefined} value
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
*/
proto.cil_onboarding.api.OnboardingRequest.prototype.setClass = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.cil_onboarding.api.OnboardingRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.clearClass = function() {
  return this.setClass(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.hasClass = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional User user = 20;
 * @return {?proto.cil_onboarding.api.User}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.getUser = function() {
  return /** @type{?proto.cil_onboarding.api.User} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.User, 20));
};


/**
 * @param {?proto.cil_onboarding.api.User|undefined} value
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
*/
proto.cil_onboarding.api.OnboardingRequest.prototype.setUser = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.cil_onboarding.api.OnboardingRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.OnboardingRequest} returns this
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.OnboardingRequest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 20) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.BatchOnboarding.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.BatchOnboarding.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.BatchOnboarding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.BatchOnboarding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.BatchOnboarding.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestsList: jspb.Message.toObjectList(msg.getRequestsList(),
    proto.cil_onboarding.api.OnboardingRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.BatchOnboarding}
 */
proto.cil_onboarding.api.BatchOnboarding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.BatchOnboarding;
  return proto.cil_onboarding.api.BatchOnboarding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.BatchOnboarding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.BatchOnboarding}
 */
proto.cil_onboarding.api.BatchOnboarding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cil_onboarding.api.OnboardingRequest;
      reader.readMessage(value,proto.cil_onboarding.api.OnboardingRequest.deserializeBinaryFromReader);
      msg.addRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.BatchOnboarding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.BatchOnboarding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.BatchOnboarding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.BatchOnboarding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cil_onboarding.api.OnboardingRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OnboardingRequest requests = 1;
 * @return {!Array<!proto.cil_onboarding.api.OnboardingRequest>}
 */
proto.cil_onboarding.api.BatchOnboarding.prototype.getRequestsList = function() {
  return /** @type{!Array<!proto.cil_onboarding.api.OnboardingRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cil_onboarding.api.OnboardingRequest, 1));
};


/**
 * @param {!Array<!proto.cil_onboarding.api.OnboardingRequest>} value
 * @return {!proto.cil_onboarding.api.BatchOnboarding} returns this
*/
proto.cil_onboarding.api.BatchOnboarding.prototype.setRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cil_onboarding.api.OnboardingRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.OnboardingRequest}
 */
proto.cil_onboarding.api.BatchOnboarding.prototype.addRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cil_onboarding.api.OnboardingRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.BatchOnboarding} returns this
 */
proto.cil_onboarding.api.BatchOnboarding.prototype.clearRequestsList = function() {
  return this.setRequestsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.Responses.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.Responses.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.Responses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.Responses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Responses.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsesList: jspb.Message.toObjectList(msg.getResponsesList(),
    proto.cil_onboarding.api.Response.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.Responses}
 */
proto.cil_onboarding.api.Responses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.Responses;
  return proto.cil_onboarding.api.Responses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.Responses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.Responses}
 */
proto.cil_onboarding.api.Responses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cil_onboarding.api.Response;
      reader.readMessage(value,proto.cil_onboarding.api.Response.deserializeBinaryFromReader);
      msg.addResponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.Responses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.Responses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.Responses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Responses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cil_onboarding.api.Response.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Response responses = 1;
 * @return {!Array<!proto.cil_onboarding.api.Response>}
 */
proto.cil_onboarding.api.Responses.prototype.getResponsesList = function() {
  return /** @type{!Array<!proto.cil_onboarding.api.Response>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cil_onboarding.api.Response, 1));
};


/**
 * @param {!Array<!proto.cil_onboarding.api.Response>} value
 * @return {!proto.cil_onboarding.api.Responses} returns this
*/
proto.cil_onboarding.api.Responses.prototype.setResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cil_onboarding.api.Response=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.Response}
 */
proto.cil_onboarding.api.Responses.prototype.addResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cil_onboarding.api.Response, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.Responses} returns this
 */
proto.cil_onboarding.api.Responses.prototype.clearResponsesList = function() {
  return this.setResponsesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    entityId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    errors: (f = msg.getErrors()) && proto.cil_onboarding.api.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.Response}
 */
proto.cil_onboarding.api.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.Response;
  return proto.cil_onboarding.api.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.Response}
 */
proto.cil_onboarding.api.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {!proto.cil_onboarding.api.Entity} */ (reader.readEnum());
      msg.setEntity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 5:
      var value = new proto.cil_onboarding.api.Error;
      reader.readMessage(value,proto.cil_onboarding.api.Error.deserializeBinaryFromReader);
      msg.setErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntity();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getEntityId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getErrors();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cil_onboarding.api.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.cil_onboarding.api.Response.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.Response} returns this
 */
proto.cil_onboarding.api.Response.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Entity entity = 2;
 * @return {!proto.cil_onboarding.api.Entity}
 */
proto.cil_onboarding.api.Response.prototype.getEntity = function() {
  return /** @type {!proto.cil_onboarding.api.Entity} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cil_onboarding.api.Entity} value
 * @return {!proto.cil_onboarding.api.Response} returns this
 */
proto.cil_onboarding.api.Response.prototype.setEntity = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string entity_id = 3;
 * @return {string}
 */
proto.cil_onboarding.api.Response.prototype.getEntityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.Response} returns this
 */
proto.cil_onboarding.api.Response.prototype.setEntityId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool success = 4;
 * @return {boolean}
 */
proto.cil_onboarding.api.Response.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cil_onboarding.api.Response} returns this
 */
proto.cil_onboarding.api.Response.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional Error errors = 5;
 * @return {?proto.cil_onboarding.api.Error}
 */
proto.cil_onboarding.api.Response.prototype.getErrors = function() {
  return /** @type{?proto.cil_onboarding.api.Error} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.Error, 5));
};


/**
 * @param {?proto.cil_onboarding.api.Error|undefined} value
 * @return {!proto.cil_onboarding.api.Response} returns this
*/
proto.cil_onboarding.api.Response.prototype.setErrors = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Response} returns this
 */
proto.cil_onboarding.api.Response.prototype.clearErrors = function() {
  return this.setErrors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Response.prototype.hasErrors = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cil_onboarding.api.Error.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.cil_onboarding.api.Error.ErrorTypeCase = {
  ERROR_TYPE_NOT_SET: 0,
  VALIDATION: 1,
  REQUEST: 2,
  INTERNAL_SERVER: 3,
  ENTITY_EXISTS: 4,
  ENTITY_DOES_NOT_EXIST: 5
};

/**
 * @return {proto.cil_onboarding.api.Error.ErrorTypeCase}
 */
proto.cil_onboarding.api.Error.prototype.getErrorTypeCase = function() {
  return /** @type {proto.cil_onboarding.api.Error.ErrorTypeCase} */(jspb.Message.computeOneofCase(this, proto.cil_onboarding.api.Error.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    validation: (f = msg.getValidation()) && proto.cil_onboarding.api.ValidationError.toObject(includeInstance, f),
    request: (f = msg.getRequest()) && proto.cil_onboarding.api.InvalidRequestError.toObject(includeInstance, f),
    internalServer: (f = msg.getInternalServer()) && proto.cil_onboarding.api.InternalServerError.toObject(includeInstance, f),
    entityExists: (f = msg.getEntityExists()) && proto.cil_onboarding.api.EntityAlreadyExistsError.toObject(includeInstance, f),
    entityDoesNotExist: (f = msg.getEntityDoesNotExist()) && proto.cil_onboarding.api.EntityDoesNotExistError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.Error}
 */
proto.cil_onboarding.api.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.Error;
  return proto.cil_onboarding.api.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.Error}
 */
proto.cil_onboarding.api.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cil_onboarding.api.ValidationError;
      reader.readMessage(value,proto.cil_onboarding.api.ValidationError.deserializeBinaryFromReader);
      msg.setValidation(value);
      break;
    case 2:
      var value = new proto.cil_onboarding.api.InvalidRequestError;
      reader.readMessage(value,proto.cil_onboarding.api.InvalidRequestError.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 3:
      var value = new proto.cil_onboarding.api.InternalServerError;
      reader.readMessage(value,proto.cil_onboarding.api.InternalServerError.deserializeBinaryFromReader);
      msg.setInternalServer(value);
      break;
    case 4:
      var value = new proto.cil_onboarding.api.EntityAlreadyExistsError;
      reader.readMessage(value,proto.cil_onboarding.api.EntityAlreadyExistsError.deserializeBinaryFromReader);
      msg.setEntityExists(value);
      break;
    case 5:
      var value = new proto.cil_onboarding.api.EntityDoesNotExistError;
      reader.readMessage(value,proto.cil_onboarding.api.EntityDoesNotExistError.deserializeBinaryFromReader);
      msg.setEntityDoesNotExist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cil_onboarding.api.ValidationError.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cil_onboarding.api.InvalidRequestError.serializeBinaryToWriter
    );
  }
  f = message.getInternalServer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cil_onboarding.api.InternalServerError.serializeBinaryToWriter
    );
  }
  f = message.getEntityExists();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cil_onboarding.api.EntityAlreadyExistsError.serializeBinaryToWriter
    );
  }
  f = message.getEntityDoesNotExist();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cil_onboarding.api.EntityDoesNotExistError.serializeBinaryToWriter
    );
  }
};


/**
 * optional ValidationError validation = 1;
 * @return {?proto.cil_onboarding.api.ValidationError}
 */
proto.cil_onboarding.api.Error.prototype.getValidation = function() {
  return /** @type{?proto.cil_onboarding.api.ValidationError} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.ValidationError, 1));
};


/**
 * @param {?proto.cil_onboarding.api.ValidationError|undefined} value
 * @return {!proto.cil_onboarding.api.Error} returns this
*/
proto.cil_onboarding.api.Error.prototype.setValidation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cil_onboarding.api.Error.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Error} returns this
 */
proto.cil_onboarding.api.Error.prototype.clearValidation = function() {
  return this.setValidation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Error.prototype.hasValidation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional InvalidRequestError request = 2;
 * @return {?proto.cil_onboarding.api.InvalidRequestError}
 */
proto.cil_onboarding.api.Error.prototype.getRequest = function() {
  return /** @type{?proto.cil_onboarding.api.InvalidRequestError} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.InvalidRequestError, 2));
};


/**
 * @param {?proto.cil_onboarding.api.InvalidRequestError|undefined} value
 * @return {!proto.cil_onboarding.api.Error} returns this
*/
proto.cil_onboarding.api.Error.prototype.setRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cil_onboarding.api.Error.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Error} returns this
 */
proto.cil_onboarding.api.Error.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Error.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional InternalServerError internal_server = 3;
 * @return {?proto.cil_onboarding.api.InternalServerError}
 */
proto.cil_onboarding.api.Error.prototype.getInternalServer = function() {
  return /** @type{?proto.cil_onboarding.api.InternalServerError} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.InternalServerError, 3));
};


/**
 * @param {?proto.cil_onboarding.api.InternalServerError|undefined} value
 * @return {!proto.cil_onboarding.api.Error} returns this
*/
proto.cil_onboarding.api.Error.prototype.setInternalServer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cil_onboarding.api.Error.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Error} returns this
 */
proto.cil_onboarding.api.Error.prototype.clearInternalServer = function() {
  return this.setInternalServer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Error.prototype.hasInternalServer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EntityAlreadyExistsError entity_exists = 4;
 * @return {?proto.cil_onboarding.api.EntityAlreadyExistsError}
 */
proto.cil_onboarding.api.Error.prototype.getEntityExists = function() {
  return /** @type{?proto.cil_onboarding.api.EntityAlreadyExistsError} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.EntityAlreadyExistsError, 4));
};


/**
 * @param {?proto.cil_onboarding.api.EntityAlreadyExistsError|undefined} value
 * @return {!proto.cil_onboarding.api.Error} returns this
*/
proto.cil_onboarding.api.Error.prototype.setEntityExists = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cil_onboarding.api.Error.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Error} returns this
 */
proto.cil_onboarding.api.Error.prototype.clearEntityExists = function() {
  return this.setEntityExists(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Error.prototype.hasEntityExists = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EntityDoesNotExistError entity_does_not_exist = 5;
 * @return {?proto.cil_onboarding.api.EntityDoesNotExistError}
 */
proto.cil_onboarding.api.Error.prototype.getEntityDoesNotExist = function() {
  return /** @type{?proto.cil_onboarding.api.EntityDoesNotExistError} */ (
    jspb.Message.getWrapperField(this, proto.cil_onboarding.api.EntityDoesNotExistError, 5));
};


/**
 * @param {?proto.cil_onboarding.api.EntityDoesNotExistError|undefined} value
 * @return {!proto.cil_onboarding.api.Error} returns this
*/
proto.cil_onboarding.api.Error.prototype.setEntityDoesNotExist = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.cil_onboarding.api.Error.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cil_onboarding.api.Error} returns this
 */
proto.cil_onboarding.api.Error.prototype.clearEntityDoesNotExist = function() {
  return this.setEntityDoesNotExist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cil_onboarding.api.Error.prototype.hasEntityDoesNotExist = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.ValidationError.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.ValidationError.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.ValidationError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.ValidationError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.ValidationError.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.cil_onboarding.api.PathBasedError.toObject, includeInstance),
    additionalDetailsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.ValidationError}
 */
proto.cil_onboarding.api.ValidationError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.ValidationError;
  return proto.cil_onboarding.api.ValidationError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.ValidationError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.ValidationError}
 */
proto.cil_onboarding.api.ValidationError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cil_onboarding.api.PathBasedError;
      reader.readMessage(value,proto.cil_onboarding.api.PathBasedError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAdditionalDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.ValidationError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.ValidationError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.ValidationError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.ValidationError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cil_onboarding.api.PathBasedError.serializeBinaryToWriter
    );
  }
  f = message.getAdditionalDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated PathBasedError errors = 1;
 * @return {!Array<!proto.cil_onboarding.api.PathBasedError>}
 */
proto.cil_onboarding.api.ValidationError.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.cil_onboarding.api.PathBasedError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cil_onboarding.api.PathBasedError, 1));
};


/**
 * @param {!Array<!proto.cil_onboarding.api.PathBasedError>} value
 * @return {!proto.cil_onboarding.api.ValidationError} returns this
*/
proto.cil_onboarding.api.ValidationError.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cil_onboarding.api.PathBasedError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.PathBasedError}
 */
proto.cil_onboarding.api.ValidationError.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cil_onboarding.api.PathBasedError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.ValidationError} returns this
 */
proto.cil_onboarding.api.ValidationError.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * repeated string additional_details = 2;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.ValidationError.prototype.getAdditionalDetailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.ValidationError} returns this
 */
proto.cil_onboarding.api.ValidationError.prototype.setAdditionalDetailsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.ValidationError} returns this
 */
proto.cil_onboarding.api.ValidationError.prototype.addAdditionalDetails = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.ValidationError} returns this
 */
proto.cil_onboarding.api.ValidationError.prototype.clearAdditionalDetailsList = function() {
  return this.setAdditionalDetailsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.InternalServerError.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.InternalServerError.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.InternalServerError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.InternalServerError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.InternalServerError.toObject = function(includeInstance, msg) {
  var f, obj = {
    detailsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.InternalServerError}
 */
proto.cil_onboarding.api.InternalServerError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.InternalServerError;
  return proto.cil_onboarding.api.InternalServerError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.InternalServerError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.InternalServerError}
 */
proto.cil_onboarding.api.InternalServerError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.InternalServerError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.InternalServerError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.InternalServerError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.InternalServerError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string details = 1;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.InternalServerError.prototype.getDetailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.InternalServerError} returns this
 */
proto.cil_onboarding.api.InternalServerError.prototype.setDetailsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.InternalServerError} returns this
 */
proto.cil_onboarding.api.InternalServerError.prototype.addDetails = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.InternalServerError} returns this
 */
proto.cil_onboarding.api.InternalServerError.prototype.clearDetailsList = function() {
  return this.setDetailsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.EntityAlreadyExistsError.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.EntityAlreadyExistsError.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.EntityAlreadyExistsError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.EntityAlreadyExistsError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.EntityAlreadyExistsError.toObject = function(includeInstance, msg) {
  var f, obj = {
    detailsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.EntityAlreadyExistsError}
 */
proto.cil_onboarding.api.EntityAlreadyExistsError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.EntityAlreadyExistsError;
  return proto.cil_onboarding.api.EntityAlreadyExistsError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.EntityAlreadyExistsError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.EntityAlreadyExistsError}
 */
proto.cil_onboarding.api.EntityAlreadyExistsError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.EntityAlreadyExistsError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.EntityAlreadyExistsError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.EntityAlreadyExistsError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.EntityAlreadyExistsError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string details = 1;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.EntityAlreadyExistsError.prototype.getDetailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.EntityAlreadyExistsError} returns this
 */
proto.cil_onboarding.api.EntityAlreadyExistsError.prototype.setDetailsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.EntityAlreadyExistsError} returns this
 */
proto.cil_onboarding.api.EntityAlreadyExistsError.prototype.addDetails = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.EntityAlreadyExistsError} returns this
 */
proto.cil_onboarding.api.EntityAlreadyExistsError.prototype.clearDetailsList = function() {
  return this.setDetailsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.EntityDoesNotExistError.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.EntityDoesNotExistError.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.EntityDoesNotExistError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.EntityDoesNotExistError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.EntityDoesNotExistError.toObject = function(includeInstance, msg) {
  var f, obj = {
    detailsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.EntityDoesNotExistError}
 */
proto.cil_onboarding.api.EntityDoesNotExistError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.EntityDoesNotExistError;
  return proto.cil_onboarding.api.EntityDoesNotExistError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.EntityDoesNotExistError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.EntityDoesNotExistError}
 */
proto.cil_onboarding.api.EntityDoesNotExistError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.EntityDoesNotExistError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.EntityDoesNotExistError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.EntityDoesNotExistError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.EntityDoesNotExistError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string details = 1;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.EntityDoesNotExistError.prototype.getDetailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.EntityDoesNotExistError} returns this
 */
proto.cil_onboarding.api.EntityDoesNotExistError.prototype.setDetailsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.EntityDoesNotExistError} returns this
 */
proto.cil_onboarding.api.EntityDoesNotExistError.prototype.addDetails = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.EntityDoesNotExistError} returns this
 */
proto.cil_onboarding.api.EntityDoesNotExistError.prototype.clearDetailsList = function() {
  return this.setDetailsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.InvalidRequestError.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.InvalidRequestError.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.InvalidRequestError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.InvalidRequestError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.InvalidRequestError.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.cil_onboarding.api.PathBasedError.toObject, includeInstance),
    additionalDetailsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.InvalidRequestError}
 */
proto.cil_onboarding.api.InvalidRequestError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.InvalidRequestError;
  return proto.cil_onboarding.api.InvalidRequestError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.InvalidRequestError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.InvalidRequestError}
 */
proto.cil_onboarding.api.InvalidRequestError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cil_onboarding.api.PathBasedError;
      reader.readMessage(value,proto.cil_onboarding.api.PathBasedError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAdditionalDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.InvalidRequestError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.InvalidRequestError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.InvalidRequestError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.InvalidRequestError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cil_onboarding.api.PathBasedError.serializeBinaryToWriter
    );
  }
  f = message.getAdditionalDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated PathBasedError errors = 1;
 * @return {!Array<!proto.cil_onboarding.api.PathBasedError>}
 */
proto.cil_onboarding.api.InvalidRequestError.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.cil_onboarding.api.PathBasedError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cil_onboarding.api.PathBasedError, 1));
};


/**
 * @param {!Array<!proto.cil_onboarding.api.PathBasedError>} value
 * @return {!proto.cil_onboarding.api.InvalidRequestError} returns this
*/
proto.cil_onboarding.api.InvalidRequestError.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cil_onboarding.api.PathBasedError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.PathBasedError}
 */
proto.cil_onboarding.api.InvalidRequestError.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cil_onboarding.api.PathBasedError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.InvalidRequestError} returns this
 */
proto.cil_onboarding.api.InvalidRequestError.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * repeated string additional_details = 2;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.InvalidRequestError.prototype.getAdditionalDetailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.InvalidRequestError} returns this
 */
proto.cil_onboarding.api.InvalidRequestError.prototype.setAdditionalDetailsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.InvalidRequestError} returns this
 */
proto.cil_onboarding.api.InvalidRequestError.prototype.addAdditionalDetails = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.InvalidRequestError} returns this
 */
proto.cil_onboarding.api.InvalidRequestError.prototype.clearAdditionalDetailsList = function() {
  return this.setAdditionalDetailsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cil_onboarding.api.PathBasedError.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cil_onboarding.api.PathBasedError.prototype.toObject = function(opt_includeInstance) {
  return proto.cil_onboarding.api.PathBasedError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cil_onboarding.api.PathBasedError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.PathBasedError.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    detailsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cil_onboarding.api.PathBasedError}
 */
proto.cil_onboarding.api.PathBasedError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cil_onboarding.api.PathBasedError;
  return proto.cil_onboarding.api.PathBasedError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cil_onboarding.api.PathBasedError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cil_onboarding.api.PathBasedError}
 */
proto.cil_onboarding.api.PathBasedError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cil_onboarding.api.PathBasedError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cil_onboarding.api.PathBasedError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cil_onboarding.api.PathBasedError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cil_onboarding.api.PathBasedError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.cil_onboarding.api.PathBasedError.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cil_onboarding.api.PathBasedError} returns this
 */
proto.cil_onboarding.api.PathBasedError.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string details = 2;
 * @return {!Array<string>}
 */
proto.cil_onboarding.api.PathBasedError.prototype.getDetailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cil_onboarding.api.PathBasedError} returns this
 */
proto.cil_onboarding.api.PathBasedError.prototype.setDetailsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cil_onboarding.api.PathBasedError} returns this
 */
proto.cil_onboarding.api.PathBasedError.prototype.addDetails = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cil_onboarding.api.PathBasedError} returns this
 */
proto.cil_onboarding.api.PathBasedError.prototype.clearDetailsList = function() {
  return this.setDetailsList([]);
};


/**
 * @enum {number}
 */
proto.cil_onboarding.api.Gender = {
  MALE: 0,
  FEMALE: 1
};

/**
 * @enum {number}
 */
proto.cil_onboarding.api.Entity = {
  ORGANIZATION: 0,
  SCHOOL: 1,
  CLASS: 2,
  USER: 3,
  ROLE: 4,
  PROGRAM: 5
};

/**
 * @enum {number}
 */
proto.cil_onboarding.api.Action = {
  CREATE: 0
};

goog.object.extend(exports, proto.cil_onboarding.api);
