syntax = "proto3";
package cil_onboarding.api;

message Organization {
  string external_uuid = 1;
  string name = 2;
}

message School {
  string external_uuid = 1;
  string external_organization_uuid = 2;
  string name = 3;
  string short_code = 5;
}

message Class {
  string external_uuid = 1;
  string external_organization_uuid = 2;
  string name = 3;
  string external_school_uuid = 4;
}

message User {
  string external_uuid = 1;
  string external_organization_uuid = 2;
  string external_school_uuid = 3;
  string email = 4;
  string phone = 5;
  string username = 6;
  string given_name = 7;
  string family_name = 8;
  Gender gender = 9;
  string date_of_birth = 10;
}

enum Gender {
  MALE = 0;
  FEMALE = 1;
}

enum Entity {
  ORGANIZATION = 0;
  SCHOOL = 1;
  CLASS = 2;
  USER = 3;
  ROLE = 4;
  PROGRAM = 5;
}

enum Action {
  CREATE = 0;
  LINK = 1;
}

message EntitiesToLink {
  Entity entity = 1;
  repeated string external_entity_identifiers = 2;
}

message LinkEntities {
  string external_organization_uuid = 1;
  oneof target {
    Organization organization = 3;
    School school = 4;
    Class class = 5;
    User user = 6;
  }
  EntitiesToLink entities = 2;
}

message OnboardingRequest {
  string request_id = 1;
  Action action = 2;
  oneof payload {
    LinkEntities link_entities = 16;
    Organization organization = 17;
    School school = 18;
    Class class = 19;
    User user = 20;
  }
}

message BatchOnboarding {
  repeated OnboardingRequest requests = 1;
}

message Responses {
  repeated Response responses = 1;
}

message Response {
  string request_id = 1;
  Entity entity = 2;
  string entity_id = 3;
  bool success = 4;
  Error errors = 5;
}

message Error {
  oneof error_type {
    ValidationError validation = 1;
    InvalidRequestError request = 2;
    InternalServerError internal_server = 3;
    EntityAlreadyExistsError entity_exists = 4;
    EntityDoesNotExistError entity_does_not_exist = 5;
  }
}

message ValidationError {
  repeated PathBasedError errors = 1;
  repeated string additional_details = 2;
}

message InternalServerError {
  repeated string details = 1;
}

message EntityAlreadyExistsError {
  repeated string details = 1;
}

message EntityDoesNotExistError {
  repeated string details = 1;
}

message InvalidRequestError {
  repeated PathBasedError errors = 1;
  repeated string additional_details = 2;
}

message PathBasedError {
  string path = 1;
  repeated string details = 2;
}

service Onboarding {
  rpc Onboard(BatchOnboarding) returns (Responses) {};
  rpc OnboardStream(stream BatchOnboarding) returns (stream Response) {};
}
